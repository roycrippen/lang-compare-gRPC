# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import lang_compare_pb2 as lang__compare__pb2


class LangCompareStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.XorCipher = channel.unary_unary(
        '/langcompare.LangCompare/XorCipher',
        request_serializer=lang__compare__pb2.XorCipherRequest.SerializeToString,
        response_deserializer=lang__compare__pb2.XorCipherReply.FromString,
        )


class LangCompareServicer(object):
  """The greeting service definition.
  """

  def XorCipher(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LangCompareServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'XorCipher': grpc.unary_unary_rpc_method_handler(
          servicer.XorCipher,
          request_deserializer=lang__compare__pb2.XorCipherRequest.FromString,
          response_serializer=lang__compare__pb2.XorCipherReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'langcompare.LangCompare', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
